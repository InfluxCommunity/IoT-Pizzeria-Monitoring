version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: pizzeria-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:  # This should be at the same level as zookeeper, not nested under it
    image: confluentinc/cp-kafka:7.4.0
    container_name: pizzeria-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3

  # InfluxDB 3 Core - starts first without dependencies
  influxdb3-core:
    container_name: influxdb3-core
    image: influxdb:3-core
    ports:
      - "${INFLUXDB_HTTP_PORT}:8181"
    environment:
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
    command:
      - influxdb3
      - serve
      - --node-id=${INFLUXDB_NODE_ID}
      - --object-store=file
      - --data-dir=/var/lib/influxdb3
    volumes:
      - influxdb_data:/var/lib/influxdb3
    restart: unless-stopped

  # Telegraf - waits for both InfluxDB AND token to be set
  telegraf:
    container_name: pizzeria-telegraf
    image: telegraf:latest
    depends_on:
      influxdb3-core:
        condition: service_started  # Changed from service_healthy since we removed health check
      kafka:
        condition: service_healthy
    environment:
      - INFLUXDB_HOST=${INFLUXDB_HOST}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    restart: unless-stopped
    profiles: ["with-token"]  # Only start when token is available

  # Simulator - waits for Kafka
  pizzeria-simulator:
    build: ./simulator
    container_name: pizzeria-simulator
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - SIMULATION_INTERVAL=${SIMULATION_INTERVAL}
      - RUSH_HOUR_MULTIPLIER=${RUSH_HOUR_MULTIPLIER}
      - BASE_ORDERS_PER_MINUTE=${BASE_ORDERS_PER_MINUTE}
    restart: unless-stopped
    profiles: ["with-token"]  # Only start when token is available

  # Dashboard - waits for InfluxDB AND token to be set
  pizzeria-dashboard:
    build: ./dashboard
    container_name: pizzeria-dashboard
    depends_on:
      influxdb3-core:
        condition: service_started  # Changed from service_healthy since we removed health check
    ports:
      - "${DASHBOARD_PORT}:8080"
    environment:
      - INFLUXDB_HOST=${INFLUXDB_HOST}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - DASHBOARD_UPDATE_INTERVAL=${DASHBOARD_UPDATE_INTERVAL}
    restart: unless-stopped
    profiles: ["with-token"]  # Only start when token is available

volumes:
  influxdb_data: